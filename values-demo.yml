opentelemetry-collector:
  image:
    repository: "otel/opentelemetry-collector-contrib"
  enabled: true
  nameOverride: otelcol
  mode: deployment
  presets:
    kubernetesAttributes:
      enabled: true
  resources:
    limits:
      memory: 200Mi
  service:
    type: ClusterIP
  ports:
    metrics:
      enabled: true
    prometheus:
      enabled: true
      containerPort: 9464
      servicePort: 9464
      protocol: TCP
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9464"
    opentelemetry_community_demo: "true"
  config:
    receivers:
      otlp:
        protocols:
          grpc: {}
          http:
            cors:
              allowed_origins:
                - "http://*"
                - "https://*"
      kubeletstats:
        auth_type: serviceAccount
        endpoint: "https://${KUBELET_HOST}:10250"
        insecure_skip_verify: true
        collection_interval: 10s
        node_condition_types_to_report:
          - Ready
        metric_groups:
          - container
          - pod
      k8s_observer:
        auth_type: serviceAccount
        api_timeout: 20s
        node: "${NODE_NAME}"
        interval: 20s

    exporters:
      otlp:
        endpoint: '{{ include "otel-demo.name" . }}-jaeger-collector:4317'
        tls:
          insecure: true
      otlphttp/prometheus:
        endpoint: 'http://{{ include "otel-demo.name" . }}-prometheus-server:9090/api/v1/otlp'
        tls:
          insecure: true
      opensearch:
        logs_index: otel
        http:
          endpoint: "http://otel-demo-opensearch:9200"
          tls:
            insecure: true

    processors:
      resource:
        attributes:
          - key: service.instance.id
            from_attribute: k8s.pod.uid
            action: insert

    extensions:
      health_check: {}
      k8s_observer: {}

    service:
      extensions: [health_check, k8s_observer]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter, resource, batch]
          exporters: [otlp, debug]
        metrics:
          receivers: [otlp, kubeletstats]
          processors: [memory_limiter, resource, batch]
          exporters: [otlphttp/prometheus]
        logs:
          processors: [memory_limiter, resource, batch]
          exporters: [opensearch]
  