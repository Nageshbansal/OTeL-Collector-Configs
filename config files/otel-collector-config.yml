mode: deployment
image:
  repository: otel/opentelemetry-collector-contrib
  pullPolicy: Always
  tag: "0.115.1"
# presets:
#   otlpExporter:
#     enabled: true
#   loggingExporter:
#     enabled: false

config:
  exporters:
    otlp:
      endpoint: "ingest.eu.signoz.cloud:443"
      tls:
        insecure: false
      headers:
        "signoz-ingestion-key": "VSy3koiPYCBq6PW0LwtpMhkmd9XsGywZxjvH"

    prometheus:
      endpoint: "127.0.0.1:9090"
      resource_to_telemetry_conversion:
        enabled: true
    debug:
      verbosity: detailed
      sampling_initial: 5
      sampling_thereafter: 200
  extensions:
    health_check: {}
    k8s_observer:
      auth_type: serviceAccount
      # node: ${env:K8S_NODE_NAME}
      observe_pods: true
      observe_nodes: true
      observe_services: false
      observe_ingresses: false
  receivers:
    receiver_creator:
      watch_observers: [k8s_observer]
      receivers:
        kubeletstats:
          rule: type == "k8s.node"
          config:
            insecure_skip_verify: true
            auth_type: serviceAccount
            collection_interval: 10s
            endpoint: "`endpoint`:`kubelet_endpoint_port`"
            extra_metadata_labels:
              - container.id
            metric_groups:
              - container
              - pod
              - node
    k8s_cluster:
      auth_type: "serviceAccount"
      collection_interval: 10s
      resource_attributes:
        k8s.node.name: 
          enabled: true
        k8s.namespace.name: 
          enabled: true
        k8s.pod.name: 
          enabled: true
      metrics:
        k8s.pod.phase:
          enabled: true  

    otlp:
      protocols:
        grpc:
          endpoint: 0.0.0.0:4317
              
  service:
    extensions: [health_check, k8s_observer]
    pipelines:
      metrics:
        receivers: [receiver_creator, k8s_cluster, otlp]
        exporters: [prometheus, otlp]
